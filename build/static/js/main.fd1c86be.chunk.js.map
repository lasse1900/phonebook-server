{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonsList.js","services/persons.js","components/ErrorMessage.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchQuery","setNewFilter","value","onChange","event","target","PersonForm","setNewPerson","newPerson","addPerson","onSubmit","name","number","type","PhonebookList","persons","newFilter","removePerson","length","filter","person","toLowerCase","includes","map","onClick","baseUrl","getAll","axios","get","post","id","newObject","put","then","people","delete","ErrorMessage","errorMessage","className","Notification","notificationMessage","App","useState","setPersons","setErrorMessage","setNotificationMessage","useEffect","personService","response","data","refreshPage","window","location","reload","preventDefault","confirm","allreadyExists","find","setTimeout","catch","error","PersonsList","ReactDOM","render","document","getElementById"],"mappings":"iMAaeA,EAZA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC7B,OACE,gCACE,4CACA,uBACEC,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAaG,EAAMC,OAAOH,c,OCsBtCI,EA7BE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC3C,OACE,8BACE,uBAAMC,SAAUD,EAAhB,UACE,gCACE,2CACA,0CACA,uBACEN,SAAU,SAACC,GAAD,OACRG,EAAa,2BAAKC,GAAN,IAAiBG,KAAMP,EAAMC,OAAOH,eAItD,gCACE,4CACA,uBACEC,SAAU,SAACC,GAAD,OACRG,EAAa,2BAAKC,GAAN,IAAiBI,OAAQR,EAAMC,OAAOH,eAIxD,8BACE,wBAAQW,KAAK,SAAb,yBCEGC,EAxBO,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAE1C,OAAKF,EAAQG,OAKX,8BACE,6BACGH,EACEI,QAAO,SAACC,GAAD,OACNA,EAAOT,KAAKU,cAAcC,SAASN,EAAUK,kBAE9CE,KAAI,SAACH,GAAD,OACH,+BACGA,EAAOT,KADV,IACiBS,EAAOR,OACtB,wBAAQY,QAAS,kBAAMP,EAAaG,IAApC,sBAFOA,EAAOT,aAXjB,8B,gBCALc,EAAU,eAEVC,EAAS,WACb,OAAOC,IAAMC,IAAIH,IAkBJ,EACbC,EADa,EAfA,SAAClB,GACd,OAAOmB,IAAME,KAAKJ,EAASjB,IAcd,EANA,SAACsB,EAAIC,GAElB,OADgBJ,IAAMK,IAAN,UAAaP,EAAb,YAAwBK,GAAMC,GAC/BE,MAAK,kBAAMP,IAASO,MAAK,SAACC,GAAD,OAAYA,SAIvC,EAXA,SAACJ,GAEd,OADgBH,IAAMQ,OAAN,UAAgBV,EAAhB,YAA2BK,IAC5BG,MAAK,kBAAMP,IAASO,MAAK,SAACC,GAAD,OAAYA,SCFvCE,EAXM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,OAAqB,OAAjBA,EACK,KAGP,qBAAKC,UAAU,QAAf,SACGD,KCKQE,EAXM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACtB,OAA4B,OAAxBA,EACK,KAGP,qBAAKF,UAAU,eAAf,SACGE,KC8HQC,EA9HH,WACV,MAA8BC,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAkCD,mBAAS,CAAE/B,KAAM,GAAIC,OAAQ,KAA/D,mBAAOJ,EAAP,KAAkBD,EAAlB,KACA,EAAkCmC,mBAAS,IAA3C,mBAAO1B,EAAP,KAAkBf,EAAlB,KACA,EAAwCyC,mBAAS,MAAjD,mBAAOL,EAAP,KAAqBO,EAArB,KACA,EAAsDF,mBAAS,MAA/D,mBAAOF,EAAP,KAA4BK,EAA5B,KAEAC,qBAAU,WACRC,IAAuBd,MAAK,SAACe,GAC3BL,EAAWK,EAASC,WAErB,IAEH,IAAMC,EAAc,WAClBC,OAAOC,SAASC,QAAO,IAiFzB,OACE,qCACE,2CACA,gCACE,cAAC,EAAD,CAAchB,aAAcA,IAC5B,cAAC,EAAD,CAAcG,oBAAqBA,IACnC,gCACE,8BACE,cAAC,EAAD,CAAQvC,aAAcA,MAExB,8BACE,cAAC,EAAD,CACEM,aAAcA,EACdC,UAAWA,EACXC,UA5FM,SAACL,GAIjB,GAHAA,EAAMkD,iBAEQvC,EAAQQ,KAAI,SAACH,GAAD,OAAYA,EAAOT,KAAKU,iBACxCC,SAASd,EAAUG,KAAKU,gBAKhC,GAJsB8B,OAAOI,QAAP,UACjB/C,EAAUG,KADO,oEAIH,CACjB,IAAM6C,EAAiBzC,EAAQ0C,MAC7B,SAACrC,GAAD,OAAYA,EAAOT,KAAKU,gBAAkBb,EAAUG,KAAKU,iBAE3D0B,EACUS,EAAe1B,GAAItB,GAC1ByB,MAAK,SAACe,GAAD,OAAcL,EAAWK,EAASC,SACvChB,MAAK,SAACe,GACLH,EAAuB,UAAD,OACVrC,EAAUG,KADA,0BAGtB+C,YAAW,WACTb,EAAuB,QACtB,QAEJc,OAAM,SAACC,GACNhB,EAAgB,2BAChBc,YAAW,WACTd,EAAgB,QACf,cAITG,EACUvC,GACPyB,MAAK,SAACe,GAAD,OACJL,GAAW,SAAC5B,GAAD,4BAAiBA,GAAjB,CAA0BiC,EAASC,aAE/ChB,MAAK,SAACe,GACLH,EAAuB,UAAD,OAAWrC,EAAUG,KAArB,wBACtB+C,YAAW,WACTb,EAAuB,QACtB,QAEJc,OAAM,SAACC,GACNhB,EAAgB,6BAChBc,YAAW,WACTd,EAAgB,QACf,mBAkDP,8BACE,cAACiB,EAAD,CACE9C,QAASA,EACTC,UAAWA,EACXC,aAjDa,SAACG,GACI+B,OAAOI,QAAP,gCACGnC,EAAOT,KADV,uBAItBoC,EACU3B,EAAOU,IACdG,MAAK,SAACe,GAAD,OAAcL,EAAWK,EAASC,SACvChB,MAAK,SAACe,GACLH,EAAuB,UAAD,OACVrC,EAAUG,KADA,4BAGtB+C,YAAW,WACTb,EAAuB,QACtB,QAEJc,OAAM,SAACC,GACNhB,EAAgB,0BAChBc,YAAW,WACTd,EAAgB,QACf,QAEPc,WAAWR,EAAa,WA8BxB,4B,MC5HNY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fd1c86be.chunk.js","sourcesContent":["import React from \"react\";\nconst Filter = ({ searchQuery, setNewFilter }) => {\n  return (\n    <div>\n      <label>filter:</label>\n      <input\n        value={searchQuery}\n        onChange={(event) => setNewFilter(event.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default Filter;","const PersonForm = ({ setNewPerson, newPerson, addPerson }) => {\n    return (\n      <div>\n        <form onSubmit={addPerson}>\n          <div>\n            <h2>Add a new</h2>\n            <label>name:</label>\n            <input\n              onChange={(event) =>\n                setNewPerson({ ...newPerson, name: event.target.value })\n              }\n            />\n          </div>\n          <div>\n            <label>number:</label>\n            <input\n              onChange={(event) =>\n                setNewPerson({ ...newPerson, number: event.target.value })\n              }\n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n\n  export default PersonForm;","const PhonebookList = ({persons, newFilter, removePerson}) => {\n\n  if (!persons.length) {\n    return <></>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {persons\n          .filter((person) =>\n            person.name.toLowerCase().includes(newFilter.toLowerCase())\n          )\n          .map((person) => (\n            <li key={person.name}>\n              {person.name} {person.number}\n              <button onClick={() => removePerson(person)}>delete</button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PhonebookList;","import axios from \"axios\";\n// const baseUrl = \"http://localhost:3001/api/persons\";\n// const baseUrl = \"https://phonebook-lk.herokuapp.com/api/persons\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newPerson) => {\n  return axios.post(baseUrl, newPerson);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(() => getAll().then((people) => people));\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(() => getAll().then((people) => people));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React from 'react'\n\nconst ErrorMessage = ({ errorMessage }) => {\n  if (errorMessage === null) {\n    return null\n  }\n  return (\n    <div className='error'>\n      {errorMessage}\n    </div>\n  )\n}\n\nexport default ErrorMessage;","import React from 'react'\n\nconst Notification = ({ notificationMessage }) => {\n  if (notificationMessage === null) {\n    return null\n  }\n  return (\n    <div className='notification'>\n      {notificationMessage}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport PersonsList from \"./components/PersonsList\";\nimport personService from \"./services/persons\";\nimport ErrorMessage from \"./components/ErrorMessage\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({ name: \"\", number: \"\" });\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const names = persons.map((person) => person.name.toLowerCase());\n    if (names.includes(newPerson.name.toLowerCase())) {\n      const confirmUpdate = window.confirm(\n        `${newPerson.name} is already added to the phonebook, do you want to change info?`\n      );\n\n      if (confirmUpdate) {\n        const allreadyExists = persons.find(\n          (person) => person.name.toLowerCase() === newPerson.name.toLowerCase()\n        );\n        personService\n          .update(allreadyExists.id, newPerson)\n          .then((response) => setPersons(response.data))\n          .then((response) => {\n            setNotificationMessage(\n              `Person ${newPerson.name} contact info changed`\n            );\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 4000);\n          })\n          .catch((error) => {\n            setErrorMessage(\"Error, could not handle\");\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 4000);\n          });\n      }\n    } else {\n      personService\n        .create(newPerson)\n        .then((response) =>\n          setPersons((persons) => [...persons, response.data])\n        )\n        .then((response) => {\n          setNotificationMessage(`Person ${newPerson.name} added to phonebook`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 4000);\n        })\n        .catch((error) => {\n          setErrorMessage(\"Error, could not handle 2\");\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 4000);\n        });\n    }\n  };\n\n  const removePerson = (person) => {\n    const confirmDeletion = window.confirm(\n      `Do you want to delete ${person.name} from phonebook?`\n    );\n    if (confirmDeletion) {\n      personService\n        .remove(person.id)\n        .then((response) => setPersons(response.data))\n        .then((response) => {\n          setNotificationMessage(\n            `Person ${newPerson.name} deleted from phonebook`\n          );\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 4000);\n        })\n        .catch((error) => {\n          setErrorMessage(\"Person already removed\");\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 4000);\n        });\n      setTimeout(refreshPage, 3000);\n    }\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <div>\n        <ErrorMessage errorMessage={errorMessage} />\n        <Notification notificationMessage={notificationMessage} />\n        <div>\n          <div>\n            <Filter setNewFilter={setNewFilter} />\n          </div>\n          <div>\n            <PersonForm\n              setNewPerson={setNewPerson}\n              newPerson={newPerson}\n              addPerson={addPerson}\n            />\n          </div>\n        </div>\n      </div>\n      <div>\n        <PersonsList\n          persons={persons}\n          newFilter={newFilter}\n          removePerson={removePerson}\n        />\n      </div>\n      <div></div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}